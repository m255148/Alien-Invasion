import pygame
import sys
from pygame.sprite import Sprite
#from HW_Ship import Ship
class BlueSky:
    def __init__(self):
        pygame.init()

        self.screen = pygame.display.set_mode((1200,600))
        self.bg_color = (230,230,230)
        self.ship = Ship(self)
        self.bullets = pygame.sprite.Group()
    def run_game(self):
        while True:
            self._check_events()
            self.ship.update()
            self.screen.fill(self.bg_color)
            self.ship.blitme()
            self._update_bullets()
            for bullet in self.bullets.sprites():
                bullet.draw_bullet()
            pygame.display.flip()

    def _check_events(self):
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                sys.exit()
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_UP:
                    self.ship.moving_up = True
                elif event.key == pygame.K_DOWN:
                    self.ship.moving_down = True
                elif event.key == pygame.K_SPACE:
                    self._fire_bullet()


            elif event.type == pygame.KEYUP:
                if event.key == pygame.K_UP:
                    self.ship.moving_up = False
                elif event.key == pygame.K_DOWN:
                    self.ship.moving_down = False
    def _fire_bullet(self):
        """create a new bullet and add it to group"""
        if len(self.bullets) < 3:
            new_bullet = Bullet(self)
            self.bullets.add(new_bullet)
    def _update_bullets(self):
        self.bullets.update()
        # Getting rid of Bullets
        for bullet in self.bullets.copy():
            if bullet.rect.right >= 1200:
                self.bullets.remove(bullet)

class Ship:
    def __init__(self,bs_game):
        self.screen = bs_game.screen
        self.screen_rect = bs_game.screen.get_rect()
        self.image = pygame.image.load('ship.bmp')
        self.image = pygame.transform.rotate(self.image,270)
        self.rect = self.image.get_rect()
        self.rect.midleft = self.screen_rect.midleft
        self.moving_up = False
        self.moving_down = False
    def update(self):
        if self.moving_up and self.rect.top > 0:
            self.rect.y -=1
        if self.moving_down and self.rect.bottom < 600:
            self.rect.y +=1
    def blitme(self):
        self.screen.blit(self.image,self.rect)
class Bullet(Sprite):
    """Manages Bullets"""
    def __init__(self,BlueSky):
        super().__init__()
        self.screen = BlueSky.screen
        self.color = (0,0,0)

        #create bullet
        self.rect = pygame.Rect(0,0,15,3)
        self.rect.midtop = BlueSky.ship.rect.midtop

        self.x = float(self.rect.x)
    def update(self):
        """move the bullet up"""
        self.x += 1
        self.rect.x = self.x
    def draw_bullet(self):
        pygame.draw.rect(self.screen,self.color,self.rect)
if __name__ == '__main__':
    BS = BlueSky()
    BS.run_game()
